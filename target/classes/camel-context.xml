<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:prop="http://camel.apache.org/schema/placeholder"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans                  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd                 http://camel.apache.org/schema/spring                  http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="it.marco.camel.handler.MyExceptionHandler" id="myExceptionHandler"/>
    <bean class="it.marco.camel.processor.MyProcessor" id="myProcessor"/>
    <bean class="it.marco.camel.strategy.MyAggregationStrategy" id="myAggregationStrategy"/>
    <bean class="it.marco.camel.pojo.MyAggregationStrategyPojo" id="myAggregationStrategyPojo"/>
    <bean class="java.util.concurrent.LinkedBlockingQueue" id="linkedBlockingQueue"/>
    <bean class="java.util.concurrent.ThreadPoolExecutor" id="threadPoolExecutor">
        <constructor-arg name="corePoolSize" value="8"/>
        <constructor-arg name="maximumPoolSize" value="16"/>
        <constructor-arg name="keepAliveTime" value="0"/>
        <constructor-arg name="unit" value="MILLISECONDS"/>
        <constructor-arg name="workQueue" ref="linkedBlockingQueue"/>
    </bean>
    <bean
        class="org.apache.activemq.artemis.jms.client.ActiveMQJMSConnectionFactory" id="connectionFactory">
        <constructor-arg name="uri" value="tcp://localhost:61616"/>
        <constructor-arg name="user" value="admin"/>
        <constructor-arg name="password" value="admin"/>
    </bean>
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="activemq">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>
    <camelContext id="camelContext-6181de96-d9a3-4d14-817d-d295a4a6a151" xmlns="http://camel.apache.org/schema/spring">
    	<onException>
    	    <exception>java.lang.Exception</exception>
    	    <redeliveryPolicy maximumRedeliveries="1"/>
    	    <handled>
		      <constant>true</constant>
		    </handled>
		    <bean ref="myExceptionHandler" method="messageFailed"/>
    	</onException>
        <route id="_route1">
            <from id="_from1" uri="seda:a"/>
            <split id="_split1">
                <tokenize token="\n"/>
                <to id="_to1" uri="seda:b"/>
            </split>
        </route>
        <route id="_route2">
            <from id="_from2" uri="seda:b"/>
            <log id="_log1" message="${body}"/>
        </route>
        <route id="_route3">
            <from id="_from3" uri="seda:c"/>
            <split id="_split2">
                <xpath>//foo/bar/text()</xpath>
                <to id="_to2" uri="seda:d"/>
            </split>
        </route>
        <route id="_route4">
            <from id="_from4" uri="seda:d"/>
            <log id="_log2" message="${body}"/>
        </route>
        <route id="_route5">
            <from id="_from5" uri="direct:parallel-custom-pool"/>
            <split executorServiceRef="threadPoolExecutor" id="_split3">
                <xpath>//foo/bar/text()</xpath>
                <to id="_to3" uri="activemq:parallel-custom-pool"/>
            </split>
        </route>
        <route id="_route6">
            <from id="_from6" uri="activemq:parallel-custom-pool"/>
            <log id="_log3" message="from activemq:parallel-custom-pool -> ${body}"/>
        </route>
        <route id="_route7">
            <from id="_from7" uri="file:C:\\workspaceApacheCamelCookBook\\camel-chapter-8-example\\inbox\\split?noop=true"/>
            <split id="_split4" streaming="true">
                <tokenize group="10" token="\n"/>
                <to id="_to4" uri="activemq:queue:order"/>
            </split>
        </route>
        <route id="_route8">
            <from id="_from8" uri="activemq:queue:order"/>
            <log id="_log4" message="from activemq:queue:order ------> ${body}"/>
        </route>
        <route id="_route9">
            <from id="_from9" uri="direct:start"/>
            <split id="_split5" streaming="true">
                <tokenize group="3" skipFirst="true" token="\n"/>
                <to id="_to5" uri="direct:group"/>
            </split>
        </route>
        <route id="_route10">
            <from id="_from10" uri="direct:group"/>
            <log id="_log5" message="from direct:group ----------> ${body}"/>
        </route>
        <route>
        	<from uri="direct:inbox"/>
        	<split streaming="true">
        	    <tokenize token="order"
        	    		  xml="true"
        	    		  inheritNamespaceTagName="orders"/>
        	    <to uri="activemq:queue:order"/>
        	</split>
        </route>
        <route>
        	<from uri="activemq:queue:order"/>
        	<log message="${body}"/>
        </route>
        <route>
        	<from uri="direct:options"/>
        	<!-- <split strategyRef="myAggregationStrategy"> --> <!-- OPTION 1 - strategyRef -->
        	<!-- <split strategyRef="myAggregationStrategyPojo" strategyMethodName="aggregate"> --> <!-- OPTION 2 - strategyMethodName -->
        	<!-- <split strategyRef="myAggregationStrategyPojo" 
	        	        strategyMethodName="aggregate"
	        		    strategyMethodAllowNull="true">	
	        		 <tokenize token=","/>
	        		 <to uri="activemq:queue:options"/>
	        	 </split> --> <!-- OPTION 3 - strategyMethodAllowNull -->
	       <!-- <split strategyRef="myAggregationStrategy" parallelProcessing="true"> --> <!-- OPTION 4 - parallelProcessing -->
	       <!-- <split strategyRef="myAggregationStrategy" parallelAggregate="true"> --> <!-- OPTION 5 - parallelAggregate -->
	       <!-- <split strategyRef="myAggregationStrategy" executorServiceRef="threadPoolExecutor"> --> <!-- OPTION 6 - executorServiceRef -->   
	       <split strategyRef="myAggregationStrategy" stopOnException="true">   
	       	   <tokenize token=","/>
	           <to uri="direct:process"/>
	       </split>
	       <!-- <split strategyRef="myAggregationStrategy" streaming="true"> --> <!-- OPTION 8 - streaming -->	
        </route>
        <route>
        	<from uri="direct:process"/>
        	<process ref="myProcessor"/>
        </route>
        <route>
        	<from uri="activemq:queue:options"/>
        	<log message="from activemq:queue:options ----------> ${body}"/>
        </route>
    </camelContext>
</beans>
